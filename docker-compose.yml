x-default-logging: &default-logging
  driver: local
  options:
    max-size: "5m"
    max-file: "3"

x-service-volume: &service-volume
  - type: bind
    source: ./src
    target: /src
  - type: bind
    source: ./tests
    target: /tests
  - type: bind
    source: ./vendor
    target: /vendor

name: migration
services:
  cli:
    container_name: migration_cli
    profiles: [ "cli" ]
    build:
      context: .docker/php/cli
      target: app_devel
      args:
        UID: ${USER:-1} # ID:1 daemon, support: linux, mac
        WORKDIR: "/src"
    env_file:
      - .docker/base.env
    networks:
      - migration
    volumes: *service-volume
    logging: *default-logging

  postgres:
    container_name: migration_postgres
    profiles: [ "serve" ]
    build:
      context: .docker/postgresql
    ports:
      - "5435:5432"
    environment:
      - POSTGRES_DB=main
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - migration
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: "pg_isready -U \"$$POSTGRES_USER\" -d \"$$POSTGRES_DB\""
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 2s
      start_interval: 1s
    logging: *default-logging

  mysql:
    container_name: migration_mysql
    profiles: [ "serve" ]
    build:
      context: .docker/mysql
    cap_add:
      - SYS_NICE # CAP_SYS_NICE
    command: [
      '--character-set-server=utf8mb4',
      '--collation-server=utf8mb4_unicode_ci'
    ]
    ports:
      - "3306:3306"
    networks:
      - migration
    volumes:
      - mysql_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: main
      MYSQL_USER: dbuser
      MYSQL_PASSWORD: dbpassword
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    logging: *default-logging

volumes:
  pg_data:
  mysql_data:

networks:
  migration:
    driver: bridge
